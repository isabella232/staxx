version: '3'
services:
  nats:
    image: 'nats:linux'
    container_name: nats.local
    expose:
      - "4222"
    ports:
      - "4222:4222"
    networks:
     - staxx
  db:
    image: 'postgres:11-alpine'
    container_name: db.local
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=staxx
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - staxx
  staxx:
    image: makerdao/staxx:dev
    container_name: staxx.local
    depends_on:
      - nats
      - db
    expose:
      - "9100-9100"
    ports:
      # - "4369:4369"
      # - "9100:9100"
      - "4000:4000"
      - "8080:8080"
      - "3134:3134"
    environment:
      DOCKER_STAXX_NETWORK: docker_staxx
      DOCKER_NATS_NETWORK: docker_staxx
      STACKS_DIR: /tmp/stacks
      CHAINS_DB_PATH: /tmp/chains
      SNAPSHOTS_DB_PATH: /tmp/snapshots
      POSTGRES_HOST: db.local
      NATS_URL: nats.local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "/tmp/chains:/tmp/chains"
      - "/tmp/snapshots:/tmp/snapshots"
      - "/tmp/stacks:/tmp/stacks"
    networks:
     - staxx
  testchain-deployment:
    image: makerdao/testchain-deployment:dev
    container_name: testchain-deployment.local
    ports:
      - "5001:5001"
    environment:
      TCD_GATEWAY: host=staxx.local
      GITHUB_DEFAULT_CHECKOUT_TARGET: master
    volumes:
      - nix-db:/nix
    tmpfs:
      - /tmp
    depends_on:
      - nats
    networks:
     - staxx

# We're using custom network setup, as it ships with a DNS
# system which allows containers to communicate by hostnames.
networks:
  staxx:
    driver: bridge

volumes:
  nix-db:
