version: 2
jobs:
  build:
    machine: true
    branches:
      only:
        - master
        - develop
        - STAX-30-new
    environment:
      # PATH: "$HOME/.asdf/bin:$HOME/.asdf/shims:$PATH"
      MIX_ENV: "test"
    parallelism: 1  # run only one instance of this job in parallel
    # docker:  # run the steps with Docker
    #   - image: circleci/elixir:1.9  # ...with this image as the primary container; this is where all `steps` will run
    #     environment:  # environment variables for primary container
    #       MIX_ENV: test
    #   - image: circleci/postgres:11-alpine  # database image
    #     environment:  # environment variables for database
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres

    working_directory: ~/app  # directory where steps will run

    steps:
      - checkout  # check out source code to working directory
      # - setup_remote_docker
          # docker_layer_caching: true
      - restore_cache:
          keys:
            - v0.2-asdf-otp
      - run:
          command: ./circleci_setup.sh
          no_output_timeout: 20m
      - run: source ~/.bashrc && asdf global erlang 22.1
      - run: source ~/.bashrc && asdf global elixir 1.9.3
      - save_cache:
          paths:
            - /root/.asdf
            - ~/.asdf
          key: v0.2-asdf-otp
      - run: source ~/.bashrc && elixir --version && mix --version
      - run: make docker-deps
      - run: source ~/.bashrc && mix local.hex --force && mix local.rebar --force

      - restore_cache:  # restores saved mix cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:  # list of cache keys, in decreasing specificity
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:  # restores saved build cache
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run: source ~/.bashrc && mix do deps.get, compile  # get updated dependencies & compile them
      - save_cache:  # generate and store mix cache
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:  # make another, less specific cache
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:  # you should really save one more cache (just in case)
          key: v1-mix-cache
          paths: "deps"
      - save_cache: # don't forget to save a *build* cache, too
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache: # and one more build cache for good measure
          key: v1-build-cache
          paths: "_build"

      - run:
          name: Running all required services
          command: source ~/.bashrc && make run-elixir-env  # run all tests in project
      - run:
          name: Renning Tests
          command: source ~/.bashrc && mix test  # run all tests in project
      - run:
          name: Building & Releasing docker images
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

            if [[ $CIRCLE_BRANCH = 'develop' ]]
            then
              make build TAG=dev
              make docker-push TAG=dev
            elif [[ $CIRCLE_BRANCH = 'master' ]]
            then
              make build TAG=latest
              make docker-push TAG=latest
            else
              echo "No build process exist for branch ${CIRCLE_BRANCH}"
            fi

